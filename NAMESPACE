useDynLib(bayesmcustom)
importFrom(Rcpp, evalCpp)
importFrom(utils, flush.console)
importFrom(stats, acf, cov, dnbinom, dnorm, lm, median, optim, pnorm, qchisq, quantile, rmultinom, rnorm, runif, var)
importFrom(graphics, abline, boxplot, bxp, contour, hist, image, lines, par, plot, plot.default, points, polygon, text, title)
importFrom(grDevices, dev.interactive, devAskNewPage, terrain.colors)
## exportPattern("^[[:alpha:]]+") this line is automatically created when using package.skeleton but should be removed to prevent the _loop functions from exporting. Instead use the export() function (as is done here)

# export(breg,createX,eMixMargDen,mixDen,llmnl,llmnp,llnhlogit,
# lndIChisq,lndIWishart,lndMvn,lndMvst,mnlHess,momMix,nmat,numEff,rdirichlet, rmixture,rmultireg,
# rwishart,rmvst,rtrun,rbprobitGibbs,runireg,
# runiregGibbs,simnhlogit,rmnpGibbs,rmixGibbs,rnmixGibbs,
# rmvpGibbs,rhierLinearModel,rhierMnlRwMixture,rivGibbs,
# rmnlIndepMetrop,rscaleUsage,ghkvec,condMom,logMargDenNR,
# rhierBinLogit,rnegbinRw,rhierNegbinRw,rbiNormGibbs,clusterMix,rsurGibbs,
# mixDenBi,mnpProb,rhierLinearMixture,
# summary.bayesmcustom.mat,summary.bayesmcustom.nmix,summary.bayesmcustom.var,
# plot.bayesmcustom.mat,plot.bayesmcustom.hcoef,plot.bayesmcustom.nmix,
# rordprobitGibbs,rivGibbs,rivDP,rDPGibbs,
# rhierMnlDP,cgetC,rbayesBLP)
export(rmvpGibbs,nmat,summary.bayesmcustom.mat,summary.bayesmcustom.nmix,summary.bayesmcustom.var)


## register S3 methods
S3method(plot, bayesmcustom.mat)
S3method(plot, bayesmcustom.nmix)
S3method(plot, bayesmcustom.hcoef)
S3method(summary, bayesmcustom.mat)
S3method(summary, bayesmcustom.var)
S3method(summary, bayesmcustom.nmix)
