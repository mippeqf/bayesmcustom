// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/bayesmcustom.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// breg
vec breg(vec const& y, mat const& X, vec const& betabar, mat const& A);
RcppExport SEXP _bayesmcustom_breg(SEXP ySEXP, SEXP XSEXP, SEXP betabarSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< mat const& >::type X(XSEXP);
    Rcpp::traits::input_parameter< vec const& >::type betabar(betabarSEXP);
    Rcpp::traits::input_parameter< mat const& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(breg(y, X, betabar, A));
    return rcpp_result_gen;
END_RCPP
}
// llmnl
double llmnl(vec const& beta, vec const& y, mat const& X);
RcppExport SEXP _bayesmcustom_llmnl(SEXP betaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec const& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< vec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< mat const& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(llmnl(beta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lndIWishart
double lndIWishart(double nu, mat const& V, mat const& IW);
RcppExport SEXP _bayesmcustom_lndIWishart(SEXP nuSEXP, SEXP VSEXP, SEXP IWSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< mat const& >::type V(VSEXP);
    Rcpp::traits::input_parameter< mat const& >::type IW(IWSEXP);
    rcpp_result_gen = Rcpp::wrap(lndIWishart(nu, V, IW));
    return rcpp_result_gen;
END_RCPP
}
// lndMvn
double lndMvn(vec const& x, vec const& mu, mat const& rooti);
RcppExport SEXP _bayesmcustom_lndMvn(SEXP xSEXP, SEXP muSEXP, SEXP rootiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< vec const& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< mat const& >::type rooti(rootiSEXP);
    rcpp_result_gen = Rcpp::wrap(lndMvn(x, mu, rooti));
    return rcpp_result_gen;
END_RCPP
}
// rmultireg
List rmultireg(mat const& Y, mat const& X, mat const& Bbar, mat const& A, double nu, mat const& V);
RcppExport SEXP _bayesmcustom_rmultireg(SEXP YSEXP, SEXP XSEXP, SEXP BbarSEXP, SEXP ASEXP, SEXP nuSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat const& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< mat const& >::type X(XSEXP);
    Rcpp::traits::input_parameter< mat const& >::type Bbar(BbarSEXP);
    Rcpp::traits::input_parameter< mat const& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< mat const& >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(rmultireg(Y, X, Bbar, A, nu, V));
    return rcpp_result_gen;
END_RCPP
}
// rmvpGibbs_rcpp_loop
List rmvpGibbs_rcpp_loop(int R, int keep, int nprint, int p, ivec const& y, mat const& X, vec const& beta0, mat const& sigma0, mat const& V, double nu, vec const& betabar, mat const& A);
RcppExport SEXP _bayesmcustom_rmvpGibbs_rcpp_loop(SEXP RSEXP, SEXP keepSEXP, SEXP nprintSEXP, SEXP pSEXP, SEXP ySEXP, SEXP XSEXP, SEXP beta0SEXP, SEXP sigma0SEXP, SEXP VSEXP, SEXP nuSEXP, SEXP betabarSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type keep(keepSEXP);
    Rcpp::traits::input_parameter< int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< ivec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< mat const& >::type X(XSEXP);
    Rcpp::traits::input_parameter< vec const& >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< mat const& >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< mat const& >::type V(VSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< vec const& >::type betabar(betabarSEXP);
    Rcpp::traits::input_parameter< mat const& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(rmvpGibbs_rcpp_loop(R, keep, nprint, p, y, X, beta0, sigma0, V, nu, betabar, A));
    return rcpp_result_gen;
END_RCPP
}
// rwishart
List rwishart(double nu, mat const& V);
RcppExport SEXP _bayesmcustom_rwishart(SEXP nuSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< mat const& >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(rwishart(nu, V));
    return rcpp_result_gen;
END_RCPP
}
// callroot
vec callroot(vec const& c1, vec const& c2, double tol, int iterlim);
RcppExport SEXP _bayesmcustom_callroot(SEXP c1SEXP, SEXP c2SEXP, SEXP tolSEXP, SEXP iterlimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec const& >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< vec const& >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type iterlim(iterlimSEXP);
    rcpp_result_gen = Rcpp::wrap(callroot(c1, c2, tol, iterlim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bayesmcustom_breg", (DL_FUNC) &_bayesmcustom_breg, 4},
    {"_bayesmcustom_llmnl", (DL_FUNC) &_bayesmcustom_llmnl, 3},
    {"_bayesmcustom_lndIWishart", (DL_FUNC) &_bayesmcustom_lndIWishart, 3},
    {"_bayesmcustom_lndMvn", (DL_FUNC) &_bayesmcustom_lndMvn, 3},
    {"_bayesmcustom_rmultireg", (DL_FUNC) &_bayesmcustom_rmultireg, 6},
    {"_bayesmcustom_rmvpGibbs_rcpp_loop", (DL_FUNC) &_bayesmcustom_rmvpGibbs_rcpp_loop, 12},
    {"_bayesmcustom_rwishart", (DL_FUNC) &_bayesmcustom_rwishart, 2},
    {"_bayesmcustom_callroot", (DL_FUNC) &_bayesmcustom_callroot, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayesmcustom(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
